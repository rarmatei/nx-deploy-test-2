{
  "version": 1,
  "projects": {
    "api": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "apps/api",
      "sourceRoot": "apps/api/src",
      "projectType": "application",
      "prefix": "api",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:webpack",
          "options": {
            "outputPath": "dist/apps/api",
            "main": "apps/api/src/main.ts",
            "tsConfig": "apps/api/tsconfig.app.json",
            "assets": [
              "apps/api/src/assets"
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "externalDependencies": [
                "@nestjs/microservices",
                "@nestjs/microservices/microservices-module",
                "@nestjs/websockets/socket-module",
                "class-transformer",
                "class-validator",
                "cache-manager"
              ],
              "fileReplacements": [
                {
                  "replace": "apps/api/src/environments/environment.ts",
                  "with": "apps/api/src/environments/environment.prod.ts"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:node",
          "options": {
            "buildTarget": "api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/api/**/*.ts"]
          },
          "outputs": ["{options.outputFile}"]
        },
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "commands": [
              "cp ../../../apps/api/Dockerfile .",
              "heroku container:login",
              "heroku container:push web -a bg-hoard-api-test",
              "heroku container:release web -a bg-hoard-api-test"
            ],
            "cwd": "dist/apps/api",
            "parallel": false
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/api/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/api"]
        },
        "20s-delay-fail": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "sleep 20 && echo \"hello\" && ls askjfhafkjahsdf"
          }
        },
        "60s-delay-fail": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "sleep 360 && echo \"hello\" && ls askjdhawkdjyhaskjd"
          }
        }
      },
      "tags": []
    },
    "bg-hoard": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/bg-hoard",
      "sourceRoot": "apps/bg-hoard/src",
      "prefix": "nx-workshop-day2",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/bg-hoard",
            "index": "apps/bg-hoard/src/index.html",
            "main": "apps/bg-hoard/src/main.ts",
            "polyfills": "apps/bg-hoard/src/polyfills.ts",
            "tsConfig": "apps/bg-hoard/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/bg-hoard/src/favicon.ico",
              "apps/bg-hoard/src/assets"
            ],
            "styles": ["apps/bg-hoard/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/bg-hoard/src/environments/environment.ts",
                  "with": "apps/bg-hoard/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "bg-hoard:build",
            "proxyConfig": "apps/bg-hoard/proxy.conf.json"
          },
          "configurations": {
            "production": {
              "browserTarget": "bg-hoard:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "bg-hoard:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/bg-hoard/src/**/*.ts"]
          },
          "outputs": ["{options.outputFile}"]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/bg-hoard/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/bg-hoard"]
        },
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "surge ./ ${SURGE_DOMAIN} --token ${SURGE_TOKEN}",
            "cwd": "dist/apps/bg-hoard",
            "parallel": false
          }
        }
      },
      "tags": []
    },
    "bg-hoard-e2e": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "apps/bg-hoard-e2e",
      "sourceRoot": "apps/bg-hoard-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/bg-hoard-e2e/cypress.json",
            "tsConfig": "apps/bg-hoard-e2e/tsconfig.e2e.json",
            "devServerTarget": "bg-hoard:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "bg-hoard:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/bg-hoard-e2e/**/*.{js,ts}"]
          },
          "outputs": ["{options.outputFile}"]
        }
      },
      "tags": [],
      "implicitDependencies": ["bg-hoard"]
    },
    "server": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "apps/server",
      "sourceRoot": "apps/server/src",
      "projectType": "application",
      "prefix": "server",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:webpack",
          "options": {
            "outputPath": "dist/apps/server",
            "main": "apps/server/src/main.ts",
            "tsConfig": "apps/server/tsconfig.app.json",
            "assets": [
              "apps/server/src/assets"
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/server/src/environments/environment.ts",
                  "with": "apps/server/src/environments/environment.prod.ts"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:node",
          "options": {
            "buildTarget": "server:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/server/**/*.ts"]
          },
          "outputs": ["{options.outputFile}"]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/server/jest.config.ts",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/server"]
        },
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "commands": [
              "cp ../../../apps/server/Dockerfile .",
              "heroku container:login",
              "heroku container:push web -a bg-hoard-api-test",
              "heroku container:release web -a bg-hoard-api-test"
            ],
            "cwd": "dist/apps/server",
            "parallel": false
          }
        }
      },
      "tags": []
    }
  }
}
